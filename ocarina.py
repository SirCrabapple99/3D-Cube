import math
faceverts = []
projectedverts = []
offset = [[0, 0], [0, 0], [0, 0]]
verts = []
faces = []
objgroup = [Rect(200, 200, 200, 200)]

# obj file
obj_data = """
# 3ds Max Wavefront OBJ Exporter v0.97b - (c)2007 guruware
# File Created: 28.10.2015 14:16:48

mtllib ocarinaoftime.mtl

#
# object node_013F26D9
#

v  -5.4961 8.5394 6.5748
v  -4.8268 9.8543 6.6614
v  -5.5748 10.2087 5.7323
v  -6.0276 8.4882 8.0433
v  -7.1575 8.4094 7.5551
v  -7.9134 8.7480 6.6378
v  -6.7087 10.1142 5.2520
v  -3.9094 4.5118 7.1339
v  -5.4882 4.3740 6.4921
v  -6.6024 4.9094 5.0984
v  -2.0354 6.6220 5.0079
v  -3.1811 7.2087 3.5236
v  -4.9291 6.8228 3.1496
v  11.7756 9.4370 -9.8425
v  12.0354 7.6063 -11.2205
v  12.5866 11.7087 -12.9252
v  10.1693 11.1102 -9.4370
v  11.1181 12.9921 -12.9213
v  8.8504 11.7087 -9.8661
v  12.1968 12.6850 -14.5354
v  11.9921 10.8032 -14.3268
v  10.4764 7.2126 -12.8937
v  6.0433 -1.6024 -8.3937
v  8.4370 2.8110 -10.8819
v  7.8071 -1.4252 -6.7087
v  5.7638 -4.5433 -4.1693
v  6.9331 -3.0039 -1.3307
v  3.2953 -7.0906 -1.5236
v  4.4724 -5.4961 1.0551
v  6.4961 0.0433 1.4173
v  8.9882 0.1535 -4.1378
v  8.5630 2.9370 -1.7677
v  6.0827 5.7559 -1.1220
v  8.4724 8.6024 -5.1968
v  2.5394 7.6299 -2.3189
v  3.7441 3.3346 2.2559
v  1.7126 1.1299 4.7047
v  4.1181 -2.4134 3.7874
v  1.3622 -4.7087 5.7165
v  -0.8150 -0.9921 6.6260
v  -1.7480 -6.6772 7.1693
v  -2.8150 -2.4567 7.7283
v  -2.4724 1.2677 6.7244
v  -4.4094 0.4409 6.3622
v  -5.2441 -2.0709 6.9803
v  -6.1024 -5.7047 7.5039
v  -3.8898 -7.6260 7.5236
v  -6.1260 -8.0197 7.1220
v  -5.5630 -9.7008 6.0512
v  -2.9094 -10.1890 4.9685
v  -1.1299 -9.4882 4.6102
v  1.7598 -7.6693 3.2047
v  0.8583 -8.9685 0.9094
v  -0.7441 -9.3583 -0.8504
v  1.4409 -7.4961 -3.5118
v  3.9370 -4.9173 -6.1024
v  9.8465 2.8819 -9.5827
v  10.7717 3.9331 -7.7205
v  10.5039 6.2008 -5.8150
v  5.8819 9.9252 -6.1181
v  -0.7244 5.3976 1.0748
v  0.5906 4.3622 3.7717
v  8.6024 8.0669 -13.6654
v  10.7913 11.8465 -14.3307
v  7.7205 11.3346 -11.2087
v  3.8150 9.0433 -8.7598
v  0.3110 6.5236 -5.3228
v  3.7244 6.9843 -10.8622
v  -0.0315 3.8504 -8.2441
v  -2.7362 3.7638 -2.1220
v  -3.6890 3.9567 0.4528
v  -4.7283 1.6890 0.2244
v  -2.6850 1.2126 -5.7520
v  1.6417 0.9055 -9.7047
v  4.9843 4.5906 -12.1378
v  7.4606 9.7480 -12.9882
v  6.5354 3.5197 -11.8622
v  3.6535 -0.6693 -9.5236
v  -0.8661 -2.0512 -7.4016
v  -4.8898 -1.4016 -2.9528
v  -2.8780 -4.7283 -4.4961
v  -6.1693 -3.5433 -0.4646
v  -6.0709 -0.4094 2.4764
v  -6.8465 -5.8504 2.8819
v  -4.5551 -6.9291 -1.6614
v  -5.2638 -8.4606 1.0866
v  -2.7087 -8.3071 -1.5000
v  -0.9213 -6.3150 -4.3819
v  1.3189 -3.7402 -7.1890
v  -5.7008 0.8701 3.6535
v  -6.3268 -2.1535 4.7323
v  -6.7835 -7.1654 5.2126
v  -5.3268 -9.7283 3.2047
v  -2.7283 -10.2283 2.0748
v  -4.5906 -10.4724 4.5827
# 95 vertices

vn -0.6823 0.3035 0.6651
vn -0.8450 0.4492 -0.2902
vn -0.0731 0.9973 0.0083
vn 0.0898 0.9561 0.2789
vn 0.0774 0.6755 0.7332
vn -0.3854 0.4012 0.8309
vn -0.3218 -0.3707 0.8712
vn -0.3465 -0.3704 0.8618
vn -0.7762 -0.4400 0.4515
vn -0.7642 -0.4473 0.4646
vn 0.6705 0.7019 -0.2402
vn 0.6473 0.1802 0.7406
vn 0.6463 0.1744 0.7428
vn 0.6549 0.7110 -0.2561
vn 0.0346 0.6103 -0.7914
vn 0.2631 0.6163 -0.7422
vn -0.7580 0.0068 -0.6522
vn -0.7594 0.0015 -0.6506
vn 0.9726 -0.0351 0.2300
vn 0.6657 0.5062 0.5482
vn 0.5686 0.6490 0.5054
vn 0.2130 0.8342 0.5086
vn 0.6313 0.7214 0.2846
vn 0.9406 -0.1368 -0.3106
vn 0.9404 -0.2303 -0.2501
vn 0.6891 -0.5002 -0.5244
vn 0.5758 -0.6156 -0.5380
vn 0.5171 -0.7181 -0.4657
vn 0.8237 -0.5661 -0.0323
vn 0.7446 -0.6653 0.0541
vn 0.7433 -0.6651 0.0719
vn 0.8074 -0.3271 0.4911
vn 0.8900 -0.2283 0.3947
vn 0.8951 -0.2018 0.3976
vn 0.5972 0.3615 0.7160
vn 0.6343 0.4077 0.6568
vn 0.1838 0.7519 0.6331
vn 0.1721 0.7404 0.6498
vn 0.6319 0.3525 0.6902
vn 0.5857 0.2977 0.7539
vn 0.5852 0.1934 0.7875
vn 0.8151 -0.3290 0.4768
vn 0.7265 -0.4071 0.5535
vn 0.5013 0.1184 0.8571
vn 0.5399 0.1122 0.8342
vn 0.4131 0.0192 0.9105
vn 0.4798 0.0051 0.8773
vn 0.3464 0.2143 0.9133
vn -0.2885 0.2738 0.9175
vn -0.2356 0.3053 0.9226
vn -0.2597 0.1975 0.9453
vn -0.0366 -0.0319 0.9988
vn -0.1472 -0.1595 0.9762
vn -0.0531 -0.5491 0.8341
vn 0.1764 -0.6603 0.7300
vn 0.3739 -0.5792 0.7244
vn 0.3757 -0.5773 0.7249
vn 0.6052 -0.4590 0.6504
vn 0.5998 -0.4693 0.6481
vn 0.7412 -0.3736 0.5577
vn 0.6819 -0.7192 0.1334
vn 0.6860 -0.7150 0.1352
vn 0.4499 -0.8661 -0.2178
vn 0.4448 -0.8632 -0.2388
vn 0.5048 -0.8071 -0.3062
vn 0.5013 -0.8047 -0.3180
vn 0.5957 -0.6771 -0.4320
vn 0.5440 -0.6285 -0.5559
vn 0.8702 -0.4815 -0.1041
vn 0.8452 -0.5191 -0.1269
vn 0.9362 -0.1337 0.3250
vn 0.9340 -0.1586 0.3200
vn 0.6618 0.3959 0.6366
vn 0.6931 0.4391 0.5717
vn 0.6613 0.4992 0.5599
vn 0.2109 0.8021 0.5588
vn 0.1942 0.8172 0.5427
vn 0.1731 0.7682 0.6164
vn 0.1699 0.7404 0.6504
vn 0.3768 0.9113 0.1662
vn 0.4994 0.3958 0.7707
vn 0.4119 0.3818 0.8274
vn 0.4253 0.2743 0.8625
vn 0.1970 -0.0797 0.9772
vn 0.1711 -0.4267 -0.8881
vn -0.0984 -0.1170 -0.9882
vn -0.0843 -0.1007 -0.9913
vn -0.5012 0.7247 -0.4728
vn -0.5629 0.7004 -0.4388
vn -0.4022 0.9117 0.0845
vn -0.4172 0.9034 0.0994
vn -0.4698 0.8797 0.0739
vn -0.5064 0.8552 0.1107
vn -0.7661 0.4753 -0.4326
vn -0.7356 0.5405 -0.4083
vn -0.8033 0.4833 -0.3481
vn -0.5822 0.8014 0.1367
vn -0.5132 0.8558 0.0655
vn -0.5916 0.8053 -0.0393
vn -0.3909 0.8957 -0.2118
vn -0.8406 0.4197 -0.3425
vn -0.8380 0.4408 -0.3216
vn -0.8049 0.4801 -0.3488
vn -0.6751 -0.0177 -0.7376
vn -0.6164 0.0398 -0.7864
vn -0.6190 0.0900 -0.7802
vn -0.5644 0.1368 -0.8141
vn -0.6808 0.5377 -0.4973
vn -0.6452 0.6147 -0.4538
vn -0.5978 0.6397 -0.4831
vn -0.4165 0.0818 -0.9054
vn -0.4389 0.0630 -0.8963
vn -0.0686 -0.3407 -0.9377
vn -0.1509 -0.4457 -0.8824
vn -0.2047 -0.3660 -0.9078
vn -0.2677 -0.4405 -0.8569
vn -0.6746 -0.0028 -0.7382
vn -0.7451 -0.0806 -0.6621
vn -0.7442 -0.1478 -0.6515
vn -0.7868 -0.2059 -0.5818
vn -0.9297 0.2865 -0.2315
vn -0.9164 0.2889 -0.2771
vn -0.9853 0.1324 -0.1081
vn -0.8810 -0.2870 -0.3762
vn -0.8833 -0.2739 -0.3804
vn -0.4820 -0.7066 -0.5181
vn -0.4018 -0.6176 -0.6761
vn -0.4257 -0.5752 -0.6985
vn -0.7872 -0.1653 -0.5941
vn -0.3733 -0.5159 -0.7711
vn -0.0875 -0.6983 -0.7104
vn -0.0182 -0.6998 -0.7141
vn 0.0650 -0.5950 -0.8011
vn 0.1022 -0.6501 -0.7529
vn 0.1702 -0.5524 -0.8160
vn 0.1942 -0.5766 -0.7936
vn 0.2454 -0.4947 -0.8337
vn 0.1698 -0.4290 -0.8872
vn -0.8653 0.3805 -0.3262
vn -0.9001 0.4060 -0.1583
vn -0.9726 0.2237 0.0626
vn -0.8300 0.3318 0.4483
vn -0.8404 0.3754 0.3909
vn -0.8725 0.2652 0.4104
vn -0.9697 0.1093 0.2186
vn -0.9918 0.0983 0.0822
vn -0.9096 -0.3719 -0.1852
vn -0.8946 -0.3713 -0.2488
vn -0.4322 -0.7680 -0.4725
vn -0.3519 -0.8237 -0.4446
vn -0.2995 -0.8397 -0.4529
vn -0.1903 -0.7484 -0.6354
vn -0.1402 -0.7535 -0.6423
vn -0.9900 0.1409 -0.0034
vn -0.9095 -0.3923 0.1377
vn -0.9502 -0.0412 0.3087
vn -0.8897 -0.4512 -0.0695
vn -0.6643 -0.7460 -0.0479
vn -0.3106 -0.8958 -0.3178
vn -0.8927 0.4244 -0.1518
vn 0.8245 -0.5650 -0.0319
vn 0.5916 -0.7788 0.2085
vn 0.3782 -0.9228 0.0736
vn 0.3411 -0.9394 0.0341
vn 0.1610 -0.9867 0.0235
vn 0.0365 -0.8745 0.4837
vn -0.3539 -0.5528 -0.7544
vn -0.2637 -0.4487 -0.8539
vn 0.9594 -0.0696 0.2734
vn 0.8700 -0.4624 -0.1712
vn 0.6889 -0.5008 -0.5240
vn 0.5828 -0.5454 -0.6025
vn 0.9677 -0.0851 0.2372
vn 0.3097 -0.9481 -0.0720
# 174 vertex normals

vt 0.7700 0.4200 0.0000
vt 0.6400 0.4200 0.0000
vt 0.9100 0.4200 0.0000
vt 0.9500 0.5600 0.0000
vt 0.8100 0.4200 0.0000
vt 0.8600 0.5600 0.0000
vt 1.0600 0.5600 0.0000
vt 1.0900 0.4200 0.0000
vt 0.4100 0.4200 0.0000
vt 0.5500 0.4200 0.0000
vt 0.2800 0.4200 0.0000
vt 0.3300 0.3600 0.0000
vt 0.2300 0.4200 0.0000
vt 0.4100 0.3600 0.0000
vt 0.5000 0.3600 0.0000
vt 0.5800 0.4200 0.0000
vt 0.5000 0.4800 0.0000
vt 0.7300 0.5600 0.0000
vt 0.5200 0.4800 0.0000
vt 0.5500 0.5900 0.0000
vt 0.3900 0.4500 0.0000
vt 0.3900 0.5900 0.0000
vt 0.5600 0.7700 0.0000
vt 0.5000 0.5900 0.0000
vt 0.5000 0.8000 0.0000
vt 0.5000 0.9400 0.0000
vt 0.7300 0.9400 0.0000
vt 0.4800 0.9800 0.0000
vt 0.5200 0.9400 0.0000
vt 0.3900 0.9400 0.0000
vt 0.3900 0.7500 0.0000
vt 0.2200 0.7500 0.0000
vt 0.2200 0.9400 0.0000
vt 0.0600 0.7500 0.0000
vt 0.0800 0.9400 0.0000
vt 0.2200 0.9800 0.0000
vt 0.0900 0.9800 0.0000
vt 0.0200 0.9800 0.0000
vt 0.0200 0.9500 0.0000
vt 0.0300 0.7500 0.0000
vt 0.0200 0.7500 0.0000
vt 0.0200 0.6600 0.0000
vt 0.0500 0.4800 0.0000
vt 0.0600 0.5900 0.0000
vt 0.2200 0.5900 0.0000
vt 0.2200 0.4500 0.0000
vt 0.7300 0.6600 0.0000
vt 0.7300 0.8000 0.0000
vt 0.9800 0.8100 0.0000
vt 0.9800 0.9400 0.0000
vt 0.7300 0.9800 0.0000
vt 0.9800 0.9800 0.0000
vt 0.5000 0.9800 0.0000
vt 0.3900 0.9800 0.0000
vt 0.3000 0.1100 0.0000
vt 0.2300 0.0600 0.0000
vt 0.2300 0.0200 0.0000
vt 0.2800 0.1900 0.0000
vt 0.2300 0.1700 0.0000
vt 0.2300 0.2800 0.0000
vt 0.3300 0.3100 0.0000
vt 0.2300 0.3300 0.0000
vt 0.4200 0.3300 0.0000
vt 0.4200 0.3100 0.0000
vt 0.5500 0.3300 0.0000
vt 0.4200 0.1900 0.0000
vt 0.5500 0.1900 0.0000
vt 0.6700 0.3300 0.0000
vt 0.6600 0.3900 0.0000
vt 0.7200 0.3900 0.0000
vt 0.7700 0.3300 0.0000
vt 0.6600 0.1900 0.0000
vt 0.5500 0.0800 0.0000
vt 0.4200 0.0900 0.0000
vt 0.3600 0.1900 0.0000
vt 0.4200 0.0200 0.0000
vt 0.5500 0.0200 0.0000
vt 0.6600 0.0600 0.0000
vt 0.7700 0.1900 0.0000
vt 0.7700 0.0600 0.0000
vt 0.8400 0.1900 0.0000
vt 0.8400 0.3300 0.0000
vt 0.9400 0.1900 0.0000
vt 0.8600 0.0800 0.0000
vt 0.9400 0.0800 0.0000
vt 0.9200 0.0200 0.0000
vt 0.7700 0.0200 0.0000
vt 0.6600 0.0200 0.0000
vt 0.8300 0.3900 0.0000
vt 0.9200 0.3300 0.0000
vt 0.8900 0.3900 0.0000
vt 0.9400 0.3700 0.0000
vt 0.9800 0.3000 0.0000
vt 0.9800 0.1900 0.0000
vt 0.9800 0.0800 0.0000
vt 0.9800 0.0200 0.0000
vt 0.9800 0.1400 0.0000
vt 0.0600 0.4500 0.0000
vt 0.0200 0.4800 0.0000
vt 0.9800 0.6700 0.0000
vt 0.9800 0.6400 0.0000
# 101 texture coords

g node_013F26D9
usemtl material_02CE20C2
s off
f 1/1/1 2/2/1 3/2/1 
f 1/1/2 4/2/2 2/2/2 
f 5/2/3 4/2/3 1/1/3 
f 6/2/4 5/2/4 1/1/4 
f 6/2/5 1/1/5 7/2/5 
f 7/2/6 1/1/6 3/2/6 
f 8/3/7 4/4/7 9/5/7 
f 9/5/8 4/4/8 5/6/8 
f 9/5/9 5/6/9 10/3/9 
f 10/3/10 5/6/10 6/4/10 
f 11/3/11 12/5/11 2/4/11 
f 11/3/12 2/4/12 4/7/12 
f 11/3/13 4/7/13 8/8/13 
f 2/4/14 12/5/14 3/6/14 
f 12/5/15 13/3/15 3/6/15 
f 3/6/16 13/3/16 7/4/16 
f 7/4/17 13/3/17 6/7/17 
f 6/7/18 13/3/18 10/8/18 
f 14/9/19 15/10/19 16/9/19 
f 14/9/20 16/9/20 17/11/20 
f 17/11/21 16/9/21 18/12/21 
f 19/13/22 17/11/22 18/12/22 
f 18/12/23 16/9/23 20/14/23 
f 16/9/24 21/15/24 20/14/24 
f 16/9/25 15/10/25 21/15/25 
f 15/10/26 22/16/26 21/15/26 
f 23/17/27 24/18/27 25/17/27 
f 25/17/28 26/19/28 23/17/28 
f 26/19/29 25/17/29 27/20/29 
f 27/20/30 28/21/30 26/19/30 
f 29/22/31 28/21/31 27/20/31 
f 27/20/32 30/23/32 29/22/32 
f 31/24/33 30/23/33 27/20/33 
f 32/25/34 30/23/34 31/24/34 
f 32/25/35 33/26/35 30/23/35 
f 33/26/36 32/25/36 34/27/36 
f 33/26/37 34/27/37 35/28/37 
f 33/26/38 35/28/38 36/29/38 
f 30/23/39 33/26/39 36/29/39 
f 37/30/40 30/23/40 36/29/40 
f 38/31/41 30/23/41 37/30/41 
f 29/22/42 30/23/42 38/31/42 
f 39/32/43 29/22/43 38/31/43 
f 38/31/44 37/30/44 39/32/44 
f 39/32/45 37/30/45 40/33/45 
f 40/33/46 41/34/46 39/32/46 
f 42/35/47 41/34/47 40/33/47 
f 43/36/48 42/35/48 40/33/48 
f 44/37/49 42/35/49 43/36/49 
f 45/38/50 42/35/50 44/37/50 
f 46/39/51 42/35/51 45/38/51 
f 46/39/52 47/40/52 42/35/52 
f 46/39/53 48/41/53 47/40/53 
f 49/42/54 47/40/54 48/41/54 
f 50/43/55 47/40/55 49/42/55 
f 51/44/56 47/40/56 50/43/56 
f 41/34/57 47/40/57 51/44/57 
f 52/45/58 41/34/58 51/44/58 
f 39/32/59 41/34/59 52/45/59 
f 52/45/60 29/22/60 39/32/60 
f 52/45/61 28/21/61 29/22/61 
f 53/46/62 28/21/62 52/45/62 
f 54/46/63 28/21/63 53/46/63 
f 55/21/64 28/21/64 54/46/64 
f 55/21/65 26/19/65 28/21/65 
f 56/19/66 26/19/66 55/21/66 
f 23/17/67 26/19/67 56/19/67 
f 25/17/68 24/18/68 57/18/68 
f 57/18/69 31/24/69 25/17/69 
f 58/47/70 31/24/70 57/18/70 
f 31/24/71 58/47/71 32/25/71 
f 32/25/72 58/47/72 59/48/72 
f 34/27/73 32/25/73 59/48/73 
f 14/49/74 34/27/74 59/48/74 
f 17/50/75 34/27/75 14/49/75 
f 17/50/76 60/51/76 34/27/76 
f 19/52/77 60/51/77 17/50/77 
f 35/28/78 34/27/78 60/51/78 
f 36/29/79 35/28/79 61/53/79 
f 61/53/80 62/54/80 36/29/80 
f 37/30/81 36/29/81 62/54/81 
f 43/36/82 37/30/82 62/54/82 
f 43/36/83 40/33/83 37/30/83 
f 42/35/84 47/40/84 41/34/84 
f 63/55/85 21/56/85 22/57/85 
f 21/56/86 63/55/86 64/58/86 
f 21/56/87 64/58/87 20/59/87 
f 18/60/88 20/59/88 64/58/88 
f 18/60/89 64/58/89 65/61/89 
f 65/61/90 19/62/90 18/60/90 
f 19/62/91 65/61/91 60/63/91 
f 60/63/92 65/61/92 66/64/92 
f 66/64/93 67/65/93 60/63/93 
f 68/66/94 67/65/94 66/64/94 
f 69/67/95 67/65/95 68/66/95 
f 67/65/96 69/67/96 70/68/96 
f 67/65/97 70/68/97 35/65/97 
f 60/63/98 67/65/98 35/65/98 
f 35/65/99 70/68/99 61/69/99 
f 70/68/100 71/70/100 61/69/100 
f 70/68/101 72/71/101 71/70/101 
f 70/68/102 73/72/102 72/71/102 
f 70/68/103 69/67/103 73/72/103 
f 69/67/104 74/73/104 73/72/104 
f 69/67/105 75/74/105 74/73/105 
f 68/66/106 75/74/106 69/67/106 
f 68/66/107 76/75/107 75/74/107 
f 68/66/108 66/64/108 76/75/108 
f 76/75/109 66/64/109 65/61/109 
f 76/75/110 65/61/110 64/58/110 
f 76/75/111 64/58/111 63/55/111 
f 76/75/112 63/55/112 75/74/112 
f 75/74/113 63/55/113 77/76/113 
f 75/74/114 77/76/114 74/73/114 
f 74/73/115 77/76/115 78/77/115 
f 74/73/116 78/77/116 79/78/116 
f 73/72/117 74/73/117 79/78/117 
f 79/78/118 80/79/118 73/72/118 
f 81/80/119 80/79/119 79/78/119 
f 80/79/120 81/80/120 82/81/120 
f 82/81/121 72/71/121 80/79/121 
f 83/82/122 72/71/122 82/81/122 
f 84/83/123 83/82/123 82/81/123 
f 85/84/124 84/83/124 82/81/124 
f 86/85/125 84/83/125 85/84/125 
f 85/84/126 87/86/126 86/85/126 
f 85/84/127 88/87/127 87/86/127 
f 81/80/128 88/87/128 85/84/128 
f 82/81/129 81/80/129 85/84/129 
f 88/87/130 81/80/130 89/88/130 
f 89/88/131 55/87/131 88/87/131 
f 56/88/132 55/87/132 89/88/132 
f 89/88/133 23/77/133 56/88/133 
f 78/77/134 23/77/134 89/88/134 
f 78/77/135 24/76/135 23/77/135 
f 77/76/136 24/76/136 78/77/136 
f 77/76/137 22/57/137 24/76/137 
f 63/55/138 22/57/138 77/76/138 
f 72/71/139 73/72/139 80/79/139 
f 83/82/140 90/89/140 72/71/140 
f 90/89/141 83/82/141 91/90/141 
f 91/90/142 44/91/142 90/89/142 
f 45/92/143 44/91/143 91/90/143 
f 46/93/144 45/92/144 91/90/144 
f 91/90/145 92/94/145 46/93/145 
f 92/94/146 91/90/146 84/83/146 
f 84/83/147 93/95/147 92/94/147 
f 86/85/148 93/95/148 84/83/148 
f 86/85/149 87/86/149 93/95/149 
f 87/86/150 94/96/150 93/95/150 
f 94/96/151 87/86/151 54/86/151 
f 87/86/152 88/87/152 54/86/152 
f 54/86/153 88/87/153 55/87/153 
f 91/90/154 83/82/154 84/83/154 
f 48/94/155 92/94/155 49/97/155 
f 92/94/156 48/94/156 46/93/156 
f 49/97/157 92/94/157 93/95/157 
f 93/95/158 95/95/158 49/97/158 
f 94/96/159 95/95/159 93/95/159 
f 72/71/160 90/89/160 71/70/160 
f 27/20/161 25/17/161 31/24/161 
f 52/45/162 51/44/162 53/46/162 
f 53/46/163 51/44/163 50/43/163 
f 94/98/164 53/46/164 50/43/164 
f 94/98/165 50/43/165 95/99/165 
f 50/43/166 49/42/166 95/99/166 
f 89/88/167 81/80/167 79/78/167 
f 79/78/168 78/77/168 89/88/168 
f 15/100/169 14/49/169 58/47/169 
f 58/47/170 57/18/170 15/100/170 
f 15/100/171 57/18/171 22/101/171 
f 22/101/172 57/18/172 24/18/172 
f 58/47/173 14/49/173 59/48/173 
f 53/46/174 94/98/174 54/46/174 
# 0 polygons - 174 triangles

#
# object node_03385DA1
#

v  -2.4724 1.2677 6.7244
v  -3.9094 4.5118 7.1339
v  -4.4094 0.4409 6.3622
v  -5.4882 4.3740 6.4921
v  -6.6024 4.9094 5.0984
v  -5.7008 0.8701 3.6535
v  0.5906 4.3622 3.7717
v  -0.7244 5.3976 1.0748
v  -2.0354 6.6220 5.0079
v  -3.1811 7.2087 3.5236
v  -4.9291 6.8228 3.1496
v  -3.6890 3.9567 0.4528
# 12 vertices

vn -0.1096 -0.1721 0.9790
vn -0.3636 -0.1302 0.9224
vn -0.8012 -0.2379 0.5491
vn -0.8726 -0.3251 0.3645
vn 0.6461 0.7629 -0.0221
vn 0.5368 0.8397 -0.0825
vn -0.0403 0.7836 -0.6200
vn -0.1538 0.6410 -0.7520
vn -0.8211 0.1601 -0.5478
vn -0.8471 0.0010 -0.5314
vn 0.5940 0.1637 0.7877
vn 0.5839 0.2572 0.7700
# 12 vertex normals

vt 0.0200 0.1400 0.0000
vt 0.2000 0.1400 0.0000
vt 0.0200 0.0900 0.0000
vt 0.2000 0.0900 0.0000
vt 0.2000 0.1300 0.0000
vt 0.2000 0.0200 0.0000
vt 0.0200 0.0200 0.0000
vt 0.0200 0.4200 0.0000
vt 0.0200 0.1600 0.0000
vt 0.2000 0.3900 0.0000
vt 0.2000 0.1900 0.0000
# 11 texture coords

g node_03385DA1
usemtl material_02CE20C2
s off
f 96/102/175 97/103/175 98/104/175 
f 98/104/176 97/103/176 99/105/176 
f 100/103/177 98/104/177 99/105/177 
f 101/102/178 98/104/178 100/103/178 
f 102/102/179 103/104/179 104/103/179 
f 104/103/180 103/104/180 105/105/180 
f 105/105/181 103/104/181 106/103/181 
f 106/103/182 103/104/182 107/102/182 
f 106/106/183 107/102/183 100/107/183 
f 100/107/184 107/102/184 101/108/184 
f 96/109/185 102/110/185 97/111/185 
f 97/111/186 102/110/186 104/112/186 
# 0 polygons - 12 triangles"""

# obj file conversion
# my original code:
# for i in icosplit:
#     if i[0] == 'v' and i[1] != 'n' and i[1] != 't':
#         icoverts.append([float([i[2:].split(' ')][0][0]), float([i[2:].split(' ')][0][2]), float([i[2:].split(' ')][0][1])])
#     if i[0] == 'f':
#         icofaces.append([int([i[2:].split(' ')][0][0].split('/')[0]) - 1, int([i[2:].split(' ')][0][2].split('/')[0]) - 1, int([i[2:].split(' ')][0][1].split('/')[0]) - 1])


# chatgpt cleaned up this part:
for line in obj_data.splitlines():
    if line.startswith('v '):
        _, x, y, z = line.split()
        verts.append([float(x), float(y), float(z)])
    elif line.startswith('f '):
        parts = line.split()[1:]
        face = [int(p.split('/')[0]) for p in parts]
        faces.append(face)
print(f"Verts: {len(verts)} | Faces: {len(faces)}\n")
print(f"Verts: {verts} \n\nFaces: {faces}")

verts = [[x * 5 for x in v] for v in verts]

def initobject():
    global verts
    global faces
    global faceverts
    global projectedverts
    faceverts = []
    for i in app.group:
        app.group.remove(i)
    # get verts of each face
    for i in faces:
        faceverts.append([
                [
                    verts[i[0] - 1][0],
                    verts[i[0] - 1][1],
                    verts[i[0] - 1][2]
                ], [
                    verts[i[1] - 1][0],
                    verts[i[1] - 1][1],
                    verts[i[1] - 1][2]
                ], [
                    verts[i[2] - 1][0],
                    verts[i[2] - 1][1],
                    verts[i[2] - 1][2]
                ]
            ])

def renderobject():
    global verts
    global faces
    global faceverts
    global projectedverts
    projectedverts = []
    for i in app.group:
        app.group.remove(i)
    # project to 2d with perspective view from the 3d vectors
    for i in faceverts:
        for x in i:
            projectedverts.append([
                [
                    (200 * (i[0][0]/(i[0][2] + 200))) + 200,
                    (200 * (i[0][1]/(i[0][2] + 200))) + 200
                ], [
                    (200 * (i[1][0]/(i[1][2] + 200))) + 200,
                    (200 * (i[1][1]/(i[1][2] + 200))) + 200
                ], [
                    (200 * (i[2][0]/(i[2][2] + 200))) + 200,
                    (200 * (i[2][1]/(i[2][2] + 200))) + 200
                ]
            ])
    # draw polygons based off 2d projection vectors
    for i in projectedverts:
        poly = Polygon(fill = None, border = 'black', borderWidth = 0.5)
        poly.pointList = i
        objgroup.append(poly)

def move(amount, xx, yy, zz):
    # translation
    global offset
    global faceverts
    offset[0][0] += amount * xx
    offset[1][0] -= amount * yy
    offset[2][0] += amount * zz
    for i in faceverts:
        for f in i:
            f[0] += amount * xx
            f[1] -= amount * yy
            f[2] += amount * zz
    renderobject()

def rotatex(amountdeg):
    global verts
    global faces
    global offset
    global faceverts
    global projectedverts
    global objgroup
    deg = amountdeg * (math.pi/180)
    for i in faceverts:
        for f in i:
            # translate to center
            f[0] -= offset[0][0]
            f[1] -= offset[1][0]
            f[2] -= offset[2][0]
            xx = f[0]
            yy = f[1]
            zz = f[2]
            # rotate
            f[1] = ((yy * math.cos(deg) - (zz * math.sin(deg))))
            f[2] = ((yy * math.sin(deg) + (zz * math.cos(deg))))
            # translate back
            f[0] += offset[0][0]
            f[1] += offset[1][0]
            f[2] += offset[2][0]
    renderobject()

def rotatey(amountdeg):
    global verts
    global faces
    global offset
    global faceverts
    global projectedverts
    global objgroup
    deg = amountdeg * (math.pi/180)
    for i in faceverts:
        for f in i:
            # translate to center
            f[0] -= offset[0][0]
            f[1] -= offset[1][0]
            f[2] -= offset[2][0]
            xx = f[0]
            yy = f[1]
            zz = f[2]
            # rotate
            f[0] = (((xx * math.cos(deg)) + (zz * math.sin(deg))))
            f[2] = (((-1 * xx) * math.sin(deg)) + (zz * math.cos(deg)))
            # translate back
            f[0] += offset[0][0]
            f[1] += offset[1][0]
            f[2] += offset[2][0]
    renderobject()

def rotatez(amountdeg):
    global verts
    global faces
    global offset
    global faceverts
    global projectedverts
    global objgroup
    deg = amountdeg * (math.pi/180)
    for i in faceverts:
        for f in i:
            # translate to center
            f[0] -= offset[0][0]
            f[1] -= offset[1][0]
            f[2] -= offset[2][0]
            xx = f[0]
            yy = f[1]
            zz = f[2]
            # rotate
            f[0] = ((xx * math.cos(deg)) - (yy * math.sin(deg)))
            f[1] = ((xx * math.sin(deg)) + (yy * math.cos(deg)))
            # translate back
            f[0] += offset[0][0]
            f[1] += offset[1][0]
            f[2] += offset[2][0]
    renderobject()

def onKeyHold(keys):
    for i in keys:
        if i == 'a':
            move(-5, 1, 0, 0)
        if i == 'd':
            move(5, 1, 0, 0)
        if i == 'w':
            move(5, 0, 0, 1)
        if i == 's':
            move(-5, 0, 0, 1)
        if i == 'space':
            move(5, 0, 1, 0)
        if i == 'c':
            move(-5, 0, 1, 0)
        if i == 'right':
            rotatey(-5)
        if i == 'left':
            rotatey(5)
        if i == 'up':
            rotatex(-5)
        if i == 'down':
            rotatex(5)
initobject()
renderobject()
